package MTR;

import MTR.blocks.BlockAPGDoor;
import MTR.blocks.BlockAPGDoorClosed;
import MTR.blocks.BlockAPGGlassBottom;
import MTR.blocks.BlockAPGGlassMiddle;
import MTR.blocks.BlockAPGGlassTop;
import MTR.blocks.BlockAdSide;
import MTR.blocks.BlockCeiling;
import MTR.blocks.BlockClock;
import MTR.blocks.BlockEscalatorLanding;
import MTR.blocks.BlockEscalatorSide;
import MTR.blocks.BlockEscalatorSideLanding;
import MTR.blocks.BlockEscalatorSign;
import MTR.blocks.BlockEscalatorStep;
import MTR.blocks.BlockGoldenRepeater;
import MTR.blocks.BlockLogo;
import MTR.blocks.BlockMTRMap;
import MTR.blocks.BlockMTRMapSide;
import MTR.blocks.BlockMTRPaneA;
import MTR.blocks.BlockMTRPaneB;
import MTR.blocks.BlockMTRPaneC;
import MTR.blocks.BlockMTRPaneD;
import MTR.blocks.BlockMTRPaneE;
import MTR.blocks.BlockMTRPaneF;
import MTR.blocks.BlockMTRPaneG;
import MTR.blocks.BlockMTRPaneH;
import MTR.blocks.BlockMTRSignPost;
import MTR.blocks.BlockNextTrain;
import MTR.blocks.BlockPIDS1;
import MTR.blocks.BlockPSDDoor;
import MTR.blocks.BlockPSDDoorClosed;
import MTR.blocks.BlockPSDGlass;
import MTR.blocks.BlockPSDGlass2015;
import MTR.blocks.BlockPSDGlassEnd;
import MTR.blocks.BlockPSDGlassMiddle;
import MTR.blocks.BlockPSDGlassVeryEnd;
import MTR.blocks.BlockPSDTop;
import MTR.blocks.BlockPlatform;
import MTR.blocks.BlockRailBooster;
import MTR.blocks.BlockRailCurved;
import MTR.blocks.BlockRailDetector2;
import MTR.blocks.BlockRailDummy;
import MTR.blocks.BlockRailIntersection;
import MTR.blocks.BlockRailMarker;
import MTR.blocks.BlockRailReverse;
import MTR.blocks.BlockRailSlope1;
import MTR.blocks.BlockRailSlope2;
import MTR.blocks.BlockRailStation;
import MTR.blocks.BlockRailStraight;
import MTR.blocks.BlockRailSwitch;
import MTR.blocks.BlockRouteChanger;
import MTR.blocks.BlockRubbishBin1;
import MTR.blocks.BlockStationNameA;
import MTR.blocks.BlockStationNameB;
import MTR.blocks.BlockStationNameC;
import MTR.blocks.BlockStationNameD;
import MTR.blocks.BlockStationNameE;
import MTR.blocks.BlockStationNameF;
import MTR.blocks.BlockStationNameG;
import MTR.blocks.BlockStationNameH;
import MTR.blocks.BlockStationNameI;
import MTR.blocks.BlockStationNameJ;
import MTR.blocks.BlockStationNameK;
import MTR.blocks.BlockStationNameL;
import MTR.blocks.BlockStationNameM;
import MTR.blocks.BlockStationNameN;
import MTR.blocks.BlockStationNameO;
import MTR.blocks.BlockStationNameP;
import MTR.blocks.BlockStationNameQ;
import MTR.blocks.BlockStationNameR;
import MTR.blocks.BlockStationNameS;
import MTR.blocks.BlockStationNameT;
import MTR.blocks.BlockStationNameU;
import MTR.blocks.BlockStationNameV;
import MTR.blocks.BlockStationNameWall1;
import MTR.blocks.BlockTicketMachine;
import MTR.blocks.BlockTrainTimer;
import net.minecraft.block.Block;
import net.minecraft.item.ItemBlock;
import net.minecraftforge.fml.common.registry.GameRegistry;

public class MTRBlocks {

	public static Block blockadside;
	public static Block blockapgdoor;
	public static Block blockapgdoorclosed;
	public static Block blockapgglasstop;
	public static Block blockapgglassbottom;
	public static Block blockapgglassmiddle;
	public static Block blockceiling;
	public static Block blockclock;
	public static Block blockescalatorstep;
	public static Block blockescalatorside;
	public static Block blockescalatorsidelanding;
	public static Block blockescalatorlanding;
	public static Block blockescalatorsign;
	public static Block blockgoldenrepeateroff;
	public static Block blockgoldenrepeateron;
	public static Block blocklogo;
	public static Block blockmtrmap;
	public static Block blockmtrmapside;
	public static Block blockmtrsignpost;
	public static Block blockmtrpanea;
	public static Block blockmtrpaneb;
	public static Block blockmtrpanec;
	public static Block blockmtrpaned;
	public static Block blockmtrpanee;
	public static Block blockmtrpanef;
	public static Block blockmtrpaneg;
	public static Block blockmtrpaneh;
	public static Block blocknexttrain;
	public static Block blockpids1;
	public static Block blockplatform;
	public static Block blockpsddoor;
	public static Block blockpsddoorclosed;
	public static Block blockpsdglass;
	public static Block blockpsdglassend;
	public static Block blockpsdglass2015;
	public static Block blockpsdglassmiddle;
	public static Block blockpsdglassveryend;
	public static Block blockpsdtop;
	public static Block blockraildummy;
	public static Block blockrailstraight;
	public static Block blockrailbooster;
	public static Block blockrailslope1;
	public static Block blockrailslope2;
	public static Block blockraildetector;
	public static Block blockrailstation;
	public static Block blockrailreverse;
	public static Block blockrailcurved;
	public static Block blockrailintersection;
	public static Block blockrailmarker;
	public static Block blockrailswitch;
	public static Block blockroutechanger;
	public static Block blockrubbishbin1;
	public static Block blockstationnamewall1;
	public static Block blockstationnamea;
	public static Block blockstationnameb;
	public static Block blockstationnamec;
	public static Block blockstationnamed;
	public static Block blockstationnamee;
	public static Block blockstationnamef;
	public static Block blockstationnameg;
	public static Block blockstationnameh;
	public static Block blockstationnamei;
	public static Block blockstationnamej;
	public static Block blockstationnamek;
	public static Block blockstationnamel;
	public static Block blockstationnamem;
	public static Block blockstationnamen;
	public static Block blockstationnameo;
	public static Block blockstationnamep;
	public static Block blockstationnameq;
	public static Block blockstationnamer;
	public static Block blockstationnames;
	public static Block blockstationnamet;
	public static Block blockstationnameu;
	public static Block blockstationnamev;
	public static Block blockticketmachine;
	public static Block blocktraintimer;

	public static void init() {
		blocklogo = register(new BlockLogo());
		blockadside = register(new BlockAdSide());
		blockapgdoor = register(new BlockAPGDoor());
		blockapgdoorclosed = register(new BlockAPGDoorClosed());
		blockapgglasstop = register(new BlockAPGGlassTop());
		blockapgglassbottom = register(new BlockAPGGlassBottom());
		blockapgglassmiddle = register(new BlockAPGGlassMiddle());
		blockceiling = register(new BlockCeiling());
		blockclock = register(new BlockClock());
		blockescalatorstep = register(new BlockEscalatorStep());
		blockescalatorside = register(new BlockEscalatorSide());
		blockescalatorsidelanding = register(new BlockEscalatorSideLanding());
		blockescalatorlanding = register(new BlockEscalatorLanding());
		blockescalatorsign = register(new BlockEscalatorSign());
		blockgoldenrepeateroff = register(new BlockGoldenRepeater(false));
		blockgoldenrepeateron = register(new BlockGoldenRepeater(true));
		blockpsddoor = register(new BlockPSDDoor());
		blockpsddoorclosed = register(new BlockPSDDoorClosed());
		blockpsdglass = register(new BlockPSDGlass());
		blockpsdglassend = register(new BlockPSDGlassEnd());
		blockpsdglass2015 = register(new BlockPSDGlass2015());
		blockpsdglassmiddle = register(new BlockPSDGlassMiddle());
		blockpsdglassveryend = register(new BlockPSDGlassVeryEnd());
		blockpsdtop = register(new BlockPSDTop());
		blockmtrmap = register(new BlockMTRMap());
		blockmtrmapside = register(new BlockMTRMapSide());
		blockmtrsignpost = register(new BlockMTRSignPost());
		blockmtrpanea = register(new BlockMTRPaneA());
		blockmtrpaneb = register(new BlockMTRPaneB());
		blockmtrpanec = register(new BlockMTRPaneC());
		blockmtrpaned = register(new BlockMTRPaneD());
		blockmtrpanee = register(new BlockMTRPaneE());
		blockmtrpanef = register(new BlockMTRPaneF());
		blockmtrpaneg = register(new BlockMTRPaneG());
		blockmtrpaneh = register(new BlockMTRPaneH());
		blocknexttrain = register(new BlockNextTrain());
		blockpids1 = register(new BlockPIDS1());
		blockplatform = register(new BlockPlatform());
		blockraildummy = register(new BlockRailDummy());
		blockrailstraight = register(new BlockRailStraight());
		blockrailbooster = register(new BlockRailBooster());
		blockrailslope1 = register(new BlockRailSlope1());
		blockrailslope2 = register(new BlockRailSlope2());
		blockraildetector = register(new BlockRailDetector2());
		blockrailstation = register(new BlockRailStation());
		blockrailreverse = register(new BlockRailReverse());
		blockrailcurved = register(new BlockRailCurved());
		blockrailintersection = register(new BlockRailIntersection());
		blockrailmarker = register(new BlockRailMarker());
		blockrailswitch = register(new BlockRailSwitch());
		blockroutechanger = register(new BlockRouteChanger());
		blockrubbishbin1 = register(new BlockRubbishBin1());
		blockstationnamewall1 = register(new BlockStationNameWall1());
		blockstationnamea = register(new BlockStationNameA());
		blockstationnameb = register(new BlockStationNameB());
		blockstationnamec = register(new BlockStationNameC());
		blockstationnamed = register(new BlockStationNameD());
		blockstationnamee = register(new BlockStationNameE());
		blockstationnamef = register(new BlockStationNameF());
		blockstationnameg = register(new BlockStationNameG());
		blockstationnameh = register(new BlockStationNameH());
		blockstationnamei = register(new BlockStationNameI());
		blockstationnamej = register(new BlockStationNameJ());
		blockstationnamek = register(new BlockStationNameK());
		blockstationnamel = register(new BlockStationNameL());
		blockstationnamem = register(new BlockStationNameM());
		blockstationnamen = register(new BlockStationNameN());
		blockstationnameo = register(new BlockStationNameO());
		blockstationnamep = register(new BlockStationNameP());
		blockstationnameq = register(new BlockStationNameQ());
		blockstationnamer = register(new BlockStationNameR());
		blockstationnames = register(new BlockStationNameS());
		blockstationnamet = register(new BlockStationNameT());
		blockstationnameu = register(new BlockStationNameU());
		blockstationnamev = register(new BlockStationNameV());
		blockticketmachine = register(new BlockTicketMachine());
		blocktraintimer = register(new BlockTrainTimer());
	}

	private static <T extends Block> T register(T block, ItemBlock itemBlock) {
		GameRegistry.register(block);
		GameRegistry.register(itemBlock);
		if (block instanceof BlockBase)
			((BlockBase) block).registerItemModel(itemBlock);
		if (block instanceof BlockGoldenRepeater)
			((BlockGoldenRepeater) block).registerItemModel(itemBlock);
		return block;
	}

	private static <T extends Block> T register(T block) {
		ItemBlock itemBlock = new ItemBlock(block);
		itemBlock.setRegistryName(block.getRegistryName());
		return register(block, itemBlock);
	}
}
