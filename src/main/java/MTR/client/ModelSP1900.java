package MTR.client;

import MTR.MathTools;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelSP1900 extends ModelBase {
	ModelRenderer Floor;
	ModelRenderer FloorSide1FC;
	ModelRenderer FloorSide2FC;
	ModelRenderer LeftWall1;
	ModelRenderer LeftWall2;
	ModelRenderer LeftWall3;
	ModelRenderer LeftWall4;
	ModelRenderer LeftWall5;
	ModelRenderer LeftWall6;
	ModelRenderer RightWall1;
	ModelRenderer RightWall2;
	ModelRenderer RightWall3;
	ModelRenderer RightWall4;
	ModelRenderer RightWall5;
	ModelRenderer RightWall6;
	ModelRenderer LeftDoor1;
	ModelRenderer LeftDoor2;
	ModelRenderer LeftDoor3;
	ModelRenderer LeftDoor4;
	ModelRenderer LeftDoor5;
	ModelRenderer LeftDoor6;
	ModelRenderer LeftDoor7;
	ModelRenderer LeftDoor8;
	ModelRenderer LeftDoor9;
	ModelRenderer LeftDoor10;
	ModelRenderer RightDoor1;
	ModelRenderer RightDoor2;
	ModelRenderer RightDoor3;
	ModelRenderer RightDoor4;
	ModelRenderer RightDoor5;
	ModelRenderer RightDoor6;
	ModelRenderer RightDoor7;
	ModelRenderer RightDoor8;
	ModelRenderer RightDoor9;
	ModelRenderer RightDoor10;
	ModelRenderer UpperLeftWall1;
	ModelRenderer UpperLeftWall2;
	ModelRenderer UpperLeftWall3;
	ModelRenderer UpperLeftWall4;
	ModelRenderer UpperLeftWall5;
	ModelRenderer UpperLeftWall6;
	ModelRenderer UpperRightWall1;
	ModelRenderer UpperRightWall2;
	ModelRenderer UpperRightWall3;
	ModelRenderer UpperRightWall4;
	ModelRenderer UpperRightWall5;
	ModelRenderer UpperRightWall6;
	ModelRenderer UpperRightWallSmiley6;
	ModelRenderer UpperLeftDoor1;
	ModelRenderer UpperLeftDoor2;
	ModelRenderer UpperLeftDoor3;
	ModelRenderer UpperLeftDoor4;
	ModelRenderer UpperLeftDoor5;
	ModelRenderer UpperLeftDoor6;
	ModelRenderer UpperLeftDoor7;
	ModelRenderer UpperLeftDoor8;
	ModelRenderer UpperLeftDoor9;
	ModelRenderer UpperLeftDoor10;
	ModelRenderer UpperRightDoor1;
	ModelRenderer UpperRightDoor2;
	ModelRenderer UpperRightDoor3;
	ModelRenderer UpperRightDoor4;
	ModelRenderer UpperRightDoor5;
	ModelRenderer UpperRightDoor6;
	ModelRenderer UpperRightDoor7;
	ModelRenderer UpperRightDoor8;
	ModelRenderer UpperRightDoor9;
	ModelRenderer UpperRightDoor10;
	ModelRenderer LeftPillar1;
	ModelRenderer LeftPillar2;
	ModelRenderer RightPillar1;
	ModelRenderer RightPillar2;
	ModelRenderer LeftSeat1;
	ModelRenderer LeftSeat2;
	ModelRenderer LeftSeat3;
	ModelRenderer LeftSeat4;
	ModelRenderer LeftSeat5;
	ModelRenderer LeftSeat6;
	ModelRenderer LeftSeatBack1;
	ModelRenderer LeftSeatBack2;
	ModelRenderer LeftSeatBack3;
	ModelRenderer LeftSeatBack4;
	ModelRenderer LeftSeatBack5;
	ModelRenderer LeftSeatBack6;
	ModelRenderer RightSeat1;
	ModelRenderer RightSeat2;
	ModelRenderer RightSeat3;
	ModelRenderer RightSeat4;
	ModelRenderer RightSeat5;
	ModelRenderer RightSeat6;
	ModelRenderer RightSeatBack1;
	ModelRenderer RightSeatBack2;
	ModelRenderer RightSeatBack3;
	ModelRenderer RightSeatBack4;
	ModelRenderer RightSeatBack5;
	ModelRenderer RightSeatBack6;
	ModelRenderer RightSeatSmileyBack6;
	ModelRenderer Pole1;
	ModelRenderer Pole1a;
	ModelRenderer Pole1b;
	ModelRenderer Pole1c;
	ModelRenderer Pole2;
	ModelRenderer Pole3;
	ModelRenderer Pole3a;
	ModelRenderer Pole3b;
	ModelRenderer Pole3c;
	ModelRenderer Pole4;
	ModelRenderer Pole5;
	ModelRenderer Pole5a;
	ModelRenderer Pole5b;
	ModelRenderer Pole5c;
	ModelRenderer Panel1;
	ModelRenderer Panel2;
	ModelRenderer Panel3;
	ModelRenderer Panel4;
	ModelRenderer Panel5;
	ModelRenderer Panel6;
	ModelRenderer Panel7;
	ModelRenderer Panel8;
	ModelRenderer Panel9;
	ModelRenderer Panel10;
	ModelRenderer RoofLeft;
	ModelRenderer RoofRight;
	ModelRenderer RoofLeftFC;
	ModelRenderer RoofRightFC;
	ModelRenderer RoofLow;
	ModelRenderer RoofInnerLeft;
	ModelRenderer RoofInnerRight;
	ModelRenderer RoofInnerLeft2;
	ModelRenderer RoofInnerRight2;
	ModelRenderer FrontBox;
	ModelRenderer BackBox;
	ModelRenderer TV1a;
	ModelRenderer TV1;
	ModelRenderer TV1b;
	ModelRenderer TV2;
	ModelRenderer TV2a;
	ModelRenderer TV2b;
	ModelRenderer TV3;
	ModelRenderer TV3a;
	ModelRenderer TV3b;
	ModelRenderer RoofMiddle;
	ModelRenderer RoofTop;
	ModelRenderer RoofTopLeft;
	ModelRenderer RoofTopRight;
	ModelRenderer RoofTopLeft1;
	ModelRenderer RoofTopLeft2;
	ModelRenderer RoofTopRight1;
	ModelRenderer RoofTopRight2;
	ModelRenderer LeftLight;
	ModelRenderer RightLight;
	ModelRenderer LeftLightOn;
	ModelRenderer RightLightOn;
	ModelRenderer Fan1;
	ModelRenderer Fan1a;
	ModelRenderer Fan1b;
	ModelRenderer Fan2;
	ModelRenderer Fan2a;
	ModelRenderer Fan2b;
	ModelRenderer UpperLeftDriverDoor;
	ModelRenderer LeftDriverDoor;
	ModelRenderer UpperRightDriverDoor;
	ModelRenderer RightDriverDoor;
	ModelRenderer BackWall;
	ModelRenderer Front;
	ModelRenderer FrontTopLeft;
	ModelRenderer FrontBottomLeft;
	ModelRenderer FrontTopRight;
	ModelRenderer FrontBottomRight;
	ModelRenderer FrontFloor;
	ModelRenderer UpperRightWall1End;
	ModelRenderer UpperLeftWall1End;
	ModelRenderer LeftWall2FC;
	ModelRenderer LeftWall4FC;
	ModelRenderer LeftWall5FC;
	ModelRenderer RightWall2FC;
	ModelRenderer RightWall4FC;
	ModelRenderer RightWall5FC;
	ModelRenderer UpperLeftWall2FC;
	ModelRenderer UpperLeftWall4FC;
	ModelRenderer UpperLeftWall5FC;
	ModelRenderer UpperRightWall2FC;
	ModelRenderer UpperRightWall4FC;
	ModelRenderer UpperRightWall5FC;
	ModelRenderer UpperLeftDoor1L;
	ModelRenderer UpperLeftDoor2L;
	ModelRenderer UpperLeftDoor3L;
	ModelRenderer UpperLeftDoor4L;
	ModelRenderer UpperLeftDoor5L;
	ModelRenderer UpperLeftDoor6L;
	ModelRenderer UpperLeftDoor7L;
	ModelRenderer UpperLeftDoor8L;
	ModelRenderer UpperLeftDoor9L;
	ModelRenderer UpperLeftDoor10L;
	ModelRenderer UpperRightDoor1L;
	ModelRenderer UpperRightDoor2L;
	ModelRenderer UpperRightDoor3L;
	ModelRenderer UpperRightDoor4L;
	ModelRenderer UpperRightDoor5L;
	ModelRenderer UpperRightDoor6L;
	ModelRenderer UpperRightDoor7L;
	ModelRenderer UpperRightDoor8L;
	ModelRenderer UpperRightDoor9L;
	ModelRenderer UpperRightDoor10L;
	ModelRenderer RoofLeft1L;
	ModelRenderer RoofLeft2L;
	ModelRenderer RoofLeft3L;
	ModelRenderer RoofLeft4L;
	ModelRenderer RoofLeft5L;
	ModelRenderer RoofRight1L;
	ModelRenderer RoofRight2L;
	ModelRenderer RoofRight3L;
	ModelRenderer RoofRight4L;
	ModelRenderer RoofRight5L;

	final int shift = 200;

	public ModelSP1900() {
		textureWidth = 1024;
		textureHeight = 512;

		Floor = MathTools.part(this, 0, 0, 0, 0, 0, 42, 7, 384, -21F, 8F, 8F - shift, 1024, 512);
		FloorSide1FC = MathTools.part(this, 0, 36, 0, 0, 0, 0, 7, 384, 21.01F, 8F, 8F - shift, 1024, 512);
		FloorSide2FC = MathTools.part(this, 0, 36, 0, 0, 0, 0, 7, 384, -21.01F, 8F, 8F - shift, 1024, 512);
		LeftWall1 = MathTools.part(this, 210, 0, 0, 0, 0, 2, 14, 54, 20, -6F, 58F - shift, 1024, 512);
		LeftWall2 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 122F - shift, 1024, 512);
		LeftWall3 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 186F - shift, 1024, 512);
		LeftWall4 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 250F - shift, 1024, 512);
		LeftWall5 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 314F - shift, 1024, 512);
		LeftWall6 = MathTools.part(this, 210, 75, 0, 0, 0, 2, 14, 54, 20, -6F, 396F - shift, 1024, 512);
		RightWall1 = MathTools.part(this, 210, 75, 0, 0, 0, 2, 14, 54, -20, -6F, 4F - shift, 1024, 512);
		RightWall2 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 86F - shift, 1024, 512);
		RightWall3 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 150F - shift, 1024, 512);
		RightWall4 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 214F - shift, 1024, 512);
		RightWall5 = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 278F - shift, 1024, 512);
		RightWall6 = MathTools.part(this, 210, 0, 0, 0, 0, 2, 14, 54, -20, -6F, 342F - shift, 1024, 512);
		LeftDoor1 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 72F - shift, 1024, 512);
		LeftDoor2 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 88F - shift, 1024, 512);
		LeftDoor3 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 136F - shift, 1024, 512);
		LeftDoor4 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 152F - shift, 1024, 512);
		LeftDoor5 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 200 - shift, 1024, 512);
		LeftDoor6 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 216F - shift, 1024, 512);
		LeftDoor7 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 264F - shift, 1024, 512);
		LeftDoor8 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 280 - shift, 1024, 512);
		LeftDoor9 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 328F - shift, 1024, 512);
		LeftDoor10 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, 21F, -6F, 344F - shift, 1024, 512);
		RightDoor1 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 56F - shift, 1024, 512);
		RightDoor2 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 72F - shift, 1024, 512);
		RightDoor3 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 120 - shift, 1024, 512);
		RightDoor4 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 136F - shift, 1024, 512);
		RightDoor5 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 184F - shift, 1024, 512);
		RightDoor6 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 200 - shift, 1024, 512);
		RightDoor7 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 248F - shift, 1024, 512);
		RightDoor8 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 264F - shift, 1024, 512);
		RightDoor9 = MathTools.part(this, 50, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 312F - shift, 1024, 512);
		RightDoor10 = MathTools.part(this, 0, 220, 0.1F, 0, 0, 1, 14, 16, -21F, -6F, 328F - shift, 1024, 512);
		UpperLeftWall1 = MathTools.part(this, 90, 75, 0, -18F, 0, 2, 18, 54, 20, -6F, 58F - shift, 1024, 512);
		UpperLeftWall2 = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, 20, -6F, 122F - shift, 1024, 512);
		UpperLeftWall3 = MathTools.part(this, 0, 60, 0, -18F, 0, 2, 18, 36, 20, -6F, 186F - shift, 1024, 512);
		UpperLeftWall4 = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, 20, -6F, 250F - shift, 1024, 512);
		UpperLeftWall5 = MathTools.part(this, 0, 60, 0, -18F, 0, 2, 18, 36, 20, -6F, 314F - shift, 1024, 512);
		UpperLeftWall6 = MathTools.part(this, 90, 0, 0, -18F, 0, 2, 18, 54, 20, -6F, 396F - shift, 1024, 512);
		UpperRightWall1 = MathTools.part(this, 90, 0, 0, -18F, 0, 2, 18, 54, -20, -6F, 4F - shift, 1024, 512);
		UpperRightWall2 = MathTools.part(this, 0, 60, 0, -18F, 0, 2, 18, 36, -20, -6F, 86F - shift, 1024, 512);
		UpperRightWall3 = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, -20, -6F, 150F - shift, 1024, 512);
		UpperRightWall4 = MathTools.part(this, 0, 60, 0, -18F, 0, 2, 18, 36, -20, -6F, 214F - shift, 1024, 512);
		UpperRightWall5 = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, -20, -6F, 278F - shift, 1024, 512);
		UpperRightWall6 = MathTools.part(this, 90, 75, 0, -18F, 0, 2, 18, 54, -20, -6F, 342F - shift, 1024, 512);
		UpperRightWallSmiley6 = MathTools.part(this, 90, 50, 0, -18F, 0, 2, 18, 54, -20, -6F, 342F - shift, 1024, 512);
		UpperLeftDoor1 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 72F - shift, 1024, 512);
		UpperLeftDoor2 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 88F - shift, 1024, 512);
		UpperLeftDoor3 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 136F - shift, 1024, 512);
		UpperLeftDoor4 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 152F - shift, 1024, 512);
		UpperLeftDoor5 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 200 - shift, 1024, 512);
		UpperLeftDoor6 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 216F - shift, 1024, 512);
		UpperLeftDoor7 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 264F - shift, 1024, 512);
		UpperLeftDoor8 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 280 - shift, 1024, 512);
		UpperLeftDoor9 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 328F - shift, 1024, 512);
		UpperLeftDoor10 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, 20.9F, -6F, 344F - shift, 1024, 512);
		UpperRightDoor1 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 56F - shift, 1024, 512);
		UpperRightDoor2 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 72F - shift, 1024, 512);
		UpperRightDoor3 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 120 - shift, 1024, 512);
		UpperRightDoor4 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 136F - shift, 1024, 512);
		UpperRightDoor5 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 184F - shift, 1024, 512);
		UpperRightDoor6 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 200 - shift, 1024, 512);
		UpperRightDoor7 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 248F - shift, 1024, 512);
		UpperRightDoor8 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 264F - shift, 1024, 512);
		UpperRightDoor9 = MathTools.part(this, 50, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 312F - shift, 1024, 512);
		UpperRightDoor10 = MathTools.part(this, 0, 180, 0, -19F, 0, 1, 19, 16, -20.9F, -6F, 328F - shift, 1024, 512);
		LeftPillar1 = MathTools.part(this, 0, 270, 0, 0, 0, 7, 40, 12, 11F, -32F, 4F - shift, 1024, 512);
		LeftPillar2 = MathTools.part(this, 0, 270, 0, 0, 0, 7, 40, 12, 11F, -32F, 384F - shift, 1024, 512);
		RightPillar1 = MathTools.part(this, 0, 270, 0, 0, 0, 7, 40, 12, -18F, -32F, 4F - shift, 1024, 512);
		RightPillar2 = MathTools.part(this, 0, 270, 0, 0, 0, 7, 40, 12, -18F, -32F, 384F - shift, 1024, 512);
		LeftSeat1 = MathTools.part(this, 280, 170, 0, 0, 0, 7, 1, 40, 11F, 3F, 16F - shift, 1024, 512);
		LeftSeat2 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, 11F, 3F, 88F - shift, 1024, 512);
		LeftSeat3 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, 11F, 3F, 152F - shift, 1024, 512);
		LeftSeat4 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, 11F, 3F, 216F - shift, 1024, 512);
		LeftSeat5 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, 11F, 3F, 280 - shift, 1024, 512);
		LeftSeat6 = MathTools.part(this, 280, 170, 0, 0, 0, 7, 1, 40, 11F, 3F, 344F - shift, 1024, 512);
		LeftSeatBack1 = MathTools.part(this, 280, 220, -1F, -8.5F, 0, 1, 8, 40, 18F, 3F, 16F - shift, 1024, 512);
		LeftSeatBack2 = MathTools.part(this, 200, 220, -1F, -8.5F, 0, 1, 8, 32, 18F, 3F, 88F - shift, 1024, 512);
		LeftSeatBack3 = MathTools.part(this, 200, 220, -1F, -8.5F, 0, 1, 8, 32, 18F, 3F, 152F - shift, 1024, 512);
		LeftSeatBack4 = MathTools.part(this, 200, 220, -1F, -8.5F, 0, 1, 8, 32, 18F, 3F, 216F - shift, 1024, 512);
		LeftSeatBack5 = MathTools.part(this, 200, 220, -1F, -8.5F, 0, 1, 8, 32, 18F, 3F, 280 - shift, 1024, 512);
		LeftSeatBack6 = MathTools.part(this, 280, 220, -1F, -8.5F, 0, 1, 8, 40, 18F, 3F, 344F - shift, 1024, 512);
		RightSeat1 = MathTools.part(this, 280, 170, 0, 0, 0, 7, 1, 40, -18F, 3F, 16F - shift, 1024, 512);
		RightSeat2 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, -18F, 3F, 88F - shift, 1024, 512);
		RightSeat3 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, -18F, 3F, 152F - shift, 1024, 512);
		RightSeat4 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, -18F, 3F, 216F - shift, 1024, 512);
		RightSeat5 = MathTools.part(this, 190, 170, 0, 0, 0, 7, 1, 32, -18F, 3F, 280 - shift, 1024, 512);
		RightSeat6 = MathTools.part(this, 280, 170, 0, 0, 0, 7, 1, 40, -18F, 3F, 344F - shift, 1024, 512);
		RightSeatBack1 = MathTools.part(this, 280, 220, 0, -8.5F, 0, 1, 8, 40, -18F, 3F, 16F - shift, 1024, 512);
		RightSeatBack2 = MathTools.part(this, 200, 220, 0, -8.5F, 0, 1, 8, 32, -18F, 3F, 88F - shift, 1024, 512);
		RightSeatBack3 = MathTools.part(this, 200, 220, 0, -8.5F, 0, 1, 8, 32, -18F, 3F, 152F - shift, 1024, 512);
		RightSeatBack4 = MathTools.part(this, 200, 220, 0, -8.5F, 0, 1, 8, 32, -18F, 3F, 216F - shift, 1024, 512);
		RightSeatBack5 = MathTools.part(this, 200, 220, 0, -8.5F, 0, 1, 8, 32, -18F, 3F, 280 - shift, 1024, 512);
		RightSeatBack6 = MathTools.part(this, 280, 220, 0, -8.5F, 0, 1, 8, 40, -18F, 3F, 344F - shift, 1024, 512);
		RightSeatSmileyBack6 = MathTools.part(this, 280, 268, 0.01F, -8.51F, 0, 1, 8, 40, -18F, 3F, 344F - shift, 1024,
				512);
		Pole1 = MathTools.part(this, 330, 0, -0.5F, 0, -0.5F, 1, 30, 1, 0, -22F, 72F - shift, 1024, 512);
		Pole1a = MathTools.part(this, 330, 0, 0, 0, -0.5F, 2, 1, 1, -1F, -23F, 72F - shift, 1024, 512);
		Pole1b = MathTools.part(this, 330, 0, -3F, -1F, -0.5F, 3, 1, 1, -1F, -22F, 72F - shift, 1024, 512);
		Pole1c = MathTools.part(this, 330, 0, 0, -1F, -0.5F, 3, 1, 1, 1F, -22F, 72F - shift, 1024, 512);
		Pole2 = MathTools.part(this, 330, 0, -0.5F, 0, -0.5F, 1, 40, 1, 0, -32F, 136F - shift, 1024, 512);
		Pole3 = MathTools.part(this, 330, 0, -0.5F, 0, -0.5F, 1, 30, 1, 0, -22F, 200 - shift, 1024, 512);
		Pole3a = MathTools.part(this, 330, 0, 0, 0, -0.5F, 2, 1, 1, -1F, -23F, 200 - shift, 1024, 512);
		Pole3b = MathTools.part(this, 330, 0, -3F, -1F, -0.5F, 3, 1, 1, -1F, -22F, 200 - shift, 1024, 512);
		Pole3c = MathTools.part(this, 330, 0, 0, -1F, -0.5F, 3, 1, 1, 1F, -22F, 200 - shift, 1024, 512);
		Pole4 = MathTools.part(this, 330, 0, -0.5F, 0, -0.5F, 1, 40, 1, 0, -32F, 264F - shift, 1024, 512);
		Pole5 = MathTools.part(this, 330, 0, -0.5F, 0, -0.5F, 1, 30, 1, 0, -22F, 328F - shift, 1024, 512);
		Pole5a = MathTools.part(this, 330, 0, 0, 0, -0.5F, 2, 1, 1, -1F, -23F, 328F - shift, 1024, 512);
		Pole5b = MathTools.part(this, 330, 0, -3F, -1F, -0.5F, 3, 1, 1, -1F, -22F, 328F - shift, 1024, 512);
		Pole5c = MathTools.part(this, 330, 0, 0, -1F, -0.5F, 3, 1, 1, 1F, -22F, 328F - shift, 1024, 512);
		Panel1 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 56F - shift, 1024, 512);
		Panel2 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 88F - shift, 1024, 512);
		Panel3 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 120 - shift, 1024, 512);
		Panel4 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 152F - shift, 1024, 512);
		Panel5 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 184F - shift, 1024, 512);
		Panel6 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 216F - shift, 1024, 512);
		Panel7 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 248F - shift, 1024, 512);
		Panel8 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 280 - shift, 1024, 512);
		Panel9 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 312F - shift, 1024, 512);
		Panel10 = MathTools.part(this, 100, 170, 0, 0, 0, 36, 32, 0, -18F, -24F, 344F - shift, 1024, 512);
		RoofLeft = MathTools.part(this, 80, 5, 0, -6F, 0, 1, 6, 392, 19F, -24F, 396F - shift, 1024, 512);
		RoofRight = MathTools.part(this, 80, 5, 0, -6F, -0, 1, 6, 392, -19F, -24F, 4F - shift, 1024, 512);
		RoofLeftFC = MathTools.part(this, 80, 5, -1, -6F, 0, 1, 6, 392, 19F, -24F, 4F - shift, 1024, 512);
		RoofRightFC = MathTools.part(this, 80, 5, -1, -6F, -0, 1, 6, 392, -19F, -24F, 396F - shift, 1024, 512);
		RoofLow = MathTools.part(this, 100, 0, 0, 0, 0, 36, 0, 384, -18F, -24F, 4F - shift, 1024, 512);
		RoofInnerLeft = MathTools.part(this, 0, 40, 0, -6F, 0, 0, 6, 368, 15F, -24F, 16F - shift, 1024, 512);
		RoofInnerRight = MathTools.part(this, 0, 40, 0, -6F, 0, 0, 6, 368, -15F, -24F, 16F - shift, 1024, 512);
		RoofInnerLeft2 = MathTools.part(this, 200, 0, 0, 0, 0, 7, 0, 368, 4F, -30, 384F - shift, 1024, 512);
		RoofInnerRight2 = MathTools.part(this, 200, 0, 0, 0, 0, 7, 0, 368, -4F, -30, 16F - shift, 1024, 512);
		FrontBox = MathTools.part(this, 0, 350, 0, 0, 0, 22, 12, 12, -11F, -36F, 4F - shift, 1024, 512);
		BackBox = MathTools.part(this, 0, 350, 0, 0, 0, 22, 12, 12, -11F, -36F, 384F - shift, 1024, 512);
		TV1a = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, -5F, -24F, 70 - shift, 1024, 512);
		TV1 = MathTools.part(this, 340, 0, 0, 0, 0, 10, 6, 4, -5F, -30, 70 - shift, 1024, 512);
		TV1b = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, 5F, -24F, 74F - shift, 1024, 512);
		TV2 = MathTools.part(this, 340, 0, 0, 0, 0, 10, 6, 4, -5F, -30, 198F - shift, 1024, 512);
		TV2a = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, -5F, -24F, 198F - shift, 1024, 512);
		TV2b = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, 5F, -24F, 202F - shift, 1024, 512);
		TV3 = MathTools.part(this, 340, 0, 0, 0, 0, 10, 6, 4, -5F, -30, 326F - shift, 1024, 512);
		TV3a = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, -5F, -24F, 326F - shift, 1024, 512);
		TV3b = MathTools.part(this, 340, 20, 0, -7F, 0, 10, 7, 2, 5F, -24F, 330 - shift, 1024, 512);
		RoofMiddle = MathTools.part(this, 500, 50, 0, 0, 0, 2, 36, 392, -18F, -30, 4F - shift, 1024, 512);
		RoofTop = MathTools.part(this, 504, 50, 0, 0, 0, 10, 6, 392, -5F, -36F, 4F - shift, 1024, 512);
		RoofTopLeft = MathTools.part(this, 500, 50, 0, 0, 0, 14, 4, 392, 5F, -36F, 4F - shift, 1024, 512);
		RoofTopRight = MathTools.part(this, 500, 50, -14F, 0, 0, 14, 4, 392, -5F, -36F, 4F - shift, 1024, 512);
		RoofTopLeft1 = MathTools.part(this, 0, 0, 0, 0, 0, 14, 4, 0, 5F, -36F, 4F - shift, 1024, 512);
		RoofTopLeft2 = MathTools.part(this, 0, 0, 0, 0, 0, 14, 4, 0, 5F, -36F, 396F - shift, 1024, 512);
		RoofTopRight1 = MathTools.part(this, 0, 0, -14F, 0, 0, 14, 4, 0, -5F, -36F, 4F - shift, 1024, 512);
		RoofTopRight2 = MathTools.part(this, 0, 0, -14F, 0, 0, 14, 4, 0, -5F, -36F, 396F - shift, 1024, 512);
		LeftLight = MathTools.part(this, 0, 10, 0, 0, -0.5F, 1, 1, 1, 18F, -27F, 232F - shift, 1024, 512);
		RightLight = MathTools.part(this, 0, 15, 0, 0, -0.5F, 1, 1, 1, -19F, -27F, 232F - shift, 1024, 512);
		LeftLightOn = MathTools.part(this, 4, 10, 0, 0, -0.5F, 1, 1, 1, 18F, -27F, 232F - shift, 1024, 512);
		RightLightOn = MathTools.part(this, 4, 15, 0, 0, -0.5F, 1, 1, 1, -19F, -27F, 232F - shift, 1024, 512);
		Fan1 = MathTools.part(this, 60, 270, 0, 0, 0, 12, 4, 60, 6F, -37F, 68F - shift, 1024, 512);
		Fan1a = MathTools.part(this, 600, 0, 0, 0, 0, 12, 4, 60, -6F, -37F, 68F - shift, 1024, 512);
		Fan1b = MathTools.part(this, 700, 10, -12F, 0, 0, 12, 4, 60, 6F, -37F, 68F - shift, 1024, 512);
		Fan2 = MathTools.part(this, 60, 270, 0, 0, 0, 12, 4, 60, -6F, -37F, 332F - shift, 1024, 512);
		Fan2a = MathTools.part(this, 600, 0, 0, 0, 0, 12, 4, 60, 6F, -37F, 332F - shift, 1024, 512);
		Fan2b = MathTools.part(this, 700, 10, -12F, 0, 0, 12, 4, 60, -6F, -37F, 332F - shift, 1024, 512);
		UpperLeftDriverDoor = MathTools.part(this, 40, 260, 0, -19F, 0, 1, 19, 14, 20.9F, -6F, 24F - shift, 1024, 512);
		LeftDriverDoor = MathTools.part(this, 40, 300, -0.1F, 0, 0, 1, 14, 14, 21F, -6F, 24F - shift, 1024, 512);
		UpperRightDriverDoor = MathTools.part(this, 80, 260, 0, -19F, 0, 1, 19, 14, -20.9F, -6F, 10 - shift, 1024, 512);
		RightDriverDoor = MathTools.part(this, 80, 300, 0.1F, 0, 0, 1, 14, 14, -21F, -6F, 10 - shift, 1024, 512);
		BackWall = MathTools.part(this, 280, 320, 0, 0, 0, 36, 40, 8, -18F, -32F, 24F - shift, 1024, 512);
		Front = MathTools.part(this, 100, 205, 0, 0, 0, 34, 46, 13, -17F, -32F, 4F - shift, 1024, 512);
		FrontTopLeft = MathTools.part(this, 220, 270, -11F, -26F, 0, 11, 26, 1, 20, -6F, 4F - shift, 1024, 512);
		FrontBottomLeft = MathTools.part(this, 220, 300, -17F, 0, 0, 17, 21, 1, 20, -6F, 4F - shift, 1024, 512);
		FrontTopRight = MathTools.part(this, 180, 270, 0, -26F, 0, 11, 26, 1, -20, -6F, 4F - shift, 1024, 512);
		FrontBottomRight = MathTools.part(this, 180, 300, 0, 0, 0, 17, 21, 1, -20, -6F, 4F - shift, 1024, 512);
		FrontFloor = MathTools.part(this, 80, 350, 0, 0, 0.01F, 40, 7, 18, -20, 8F, -10 - shift, 1024, 512);
		UpperRightWall1End = MathTools.part(this, 240, 440, 0, -18F, 0, 2, 18, 54, -20, -6F, 4F - shift, 1024, 512);
		UpperLeftWall1End = MathTools.part(this, 110, 440, 0, -18F, 0, 2, 18, 54, 20, -6F, 58F - shift, 1024, 512);
		LeftWall2FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 154F - shift, 1024, 512);
		LeftWall4FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 282F - shift, 1024, 512);
		LeftWall5FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, 20, -6F, 346F - shift, 1024, 512);
		RightWall2FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 118F - shift, 1024, 512);
		RightWall4FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 246F - shift, 1024, 512);
		RightWall5FC = MathTools.part(this, 0, 120, 0, 0, 0, 2, 14, 36, -20, -6F, 310F - shift, 1024, 512);
		UpperLeftWall2FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, 20, -6F, 154F - shift, 1024, 512);
		UpperLeftWall4FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, 20, -6F, 282F - shift, 1024, 512);
		UpperLeftWall5FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, 20, -6F, 346F - shift, 1024, 512);
		UpperRightWall2FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, -20, -6F, 118F - shift, 1024, 512);
		UpperRightWall4FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, -20, -6F, 246F - shift, 1024, 512);
		UpperRightWall5FC = MathTools.part(this, 0, 0, 0, -18F, 0, 2, 18, 36, -20, -6F, 310F - shift, 1024, 512);

		textureWidth = 30;
		textureHeight = 19;

		UpperLeftDoor1L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, -160F + 32 - 0.5F, 30, 19);
		UpperLeftDoor2L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, -144F + 32 - 1.5F, 30, 19);
		UpperLeftDoor3L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, -80F + 16 - 0.5F, 30, 19);
		UpperLeftDoor4L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, -64F + 16 - 1.5F, 30, 19);
		UpperLeftDoor5L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 0F - 0.5F, 30, 19);
		UpperLeftDoor6L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 16F - 1.5F, 30, 19);
		UpperLeftDoor7L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 80F - 16 - 0.5F, 30, 19);
		UpperLeftDoor8L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 96F - 16 - 1.5F, 30, 19);
		UpperLeftDoor9L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 160F - 32 - 0.5F, 30, 19);
		UpperLeftDoor10L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, 20.89F, -6F, 176F - 32 - 1.5F, 30, 19);
		UpperRightDoor1L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, -176F + 32 + 1.5F, 30, 19);
		UpperRightDoor2L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, -160F + 32 + 0.5F, 30, 19);
		UpperRightDoor3L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, -96F + 16 + 1.5F, 30, 19);
		UpperRightDoor4L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, -80F + 16 + 0.5F, 30, 19);
		UpperRightDoor5L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, -16F + 1.5F, 30, 19);
		UpperRightDoor6L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, 0F + 0.5F, 30, 19);
		UpperRightDoor7L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, 64F - 16 + 1.5F, 30, 19);
		UpperRightDoor8L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, 80F - 16 + 0.5F, 30, 19);
		UpperRightDoor9L = MathTools.part(this, 15, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, 144F - 32 + 1.5F, 30, 19);
		UpperRightDoor10L = MathTools.part(this, 0, 24, 0, -19F, 0, 1, 19, 14, -20.89F, -6F, 160F - 32 + 0.5F, 30, 19);

		RoofLeft1L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, 19.01F, -24F, -116 + 0.5F, 30, 19);
		RoofLeft2L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, 19.01F, -24F, -52 + 0.5F, 30, 19);
		RoofLeft3L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, 19.01F, -24F, 12 + 0.5F, 30, 19);
		RoofLeft4L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, 19.01F, -24F, 76 + 0.5F, 30, 19);
		RoofLeft5L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, 19.01F, -24F, 140 + 0.5F, 30, 19);
		RoofRight1L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, -19.01F, -24F, -140 - 0.5F, 30, 19);
		RoofRight2L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, -19.01F, -24F, -76 - 0.5F, 30, 19);
		RoofRight3L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, -19.01F, -24F, -12 - 0.5F, 30, 19);
		RoofRight4L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, -19.01F, -24F, 52 - 0.5F, 30, 19);
		RoofRight5L = MathTools.part(this, 3, 15, 0, -1.54F, 0, 0, 2, 24, -19.01F, -24F, 116 - 0.5F, 30, 19);

		setRotation(LeftWall1, 0, (float) Math.PI, 0);
		setRotation(LeftWall2, 0, (float) Math.PI, 0);
		setRotation(LeftWall3, 0, (float) Math.PI, 0);
		setRotation(LeftWall4, 0, (float) Math.PI, 0);
		setRotation(LeftWall5, 0, (float) Math.PI, 0);
		setRotation(LeftWall6, 0, (float) Math.PI, 0);
		setRotation(LeftDoor1, 0, (float) Math.PI, 0);
		setRotation(LeftDoor2, 0, (float) Math.PI, 0);
		setRotation(LeftDoor3, 0, (float) Math.PI, 0);
		setRotation(LeftDoor4, 0, (float) Math.PI, 0);
		setRotation(LeftDoor5, 0, (float) Math.PI, 0);
		setRotation(LeftDoor6, 0, (float) Math.PI, 0);
		setRotation(LeftDoor7, 0, (float) Math.PI, 0);
		setRotation(LeftDoor8, 0, (float) Math.PI, 0);
		setRotation(LeftDoor9, 0, (float) Math.PI, 0);
		setRotation(LeftDoor10, 0, (float) Math.PI, 0);
		setRotation(UpperLeftWall1, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall2, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall3, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall4, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall5, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall6, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperRightWall1, 0, 0, 0.1106539F);
		setRotation(UpperRightWall2, 0, 0, 0.1106539F);
		setRotation(UpperRightWall3, 0, 0, 0.1106539F);
		setRotation(UpperRightWall4, 0, 0, 0.1106539F);
		setRotation(UpperRightWall5, 0, 0, 0.1106539F);
		setRotation(UpperRightWall6, 0, 0, 0.1106539F);
		setRotation(UpperRightWallSmiley6, 0, 0, 0.1106539F);
		setRotation(UpperLeftDoor1, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor2, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor3, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor4, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor5, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor6, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor7, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor8, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor9, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor10, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperRightDoor1, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor2, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor3, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor4, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor5, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor6, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor7, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor8, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor9, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor10, 0, 0, 0.1106539F);
		setRotation(LeftSeatBack1, 0, 0, 0.0872665F);
		setRotation(LeftSeatBack2, 0, 0, 0.0872665F);
		setRotation(LeftSeatBack3, 0, 0, 0.0872665F);
		setRotation(LeftSeatBack4, 0, 0, 0.0872665F);
		setRotation(LeftSeatBack5, 0, 0, 0.0872665F);
		setRotation(LeftSeatBack6, 0, 0, 0.0872665F);
		setRotation(RightSeatBack1, 0, 0, -0.0872665F);
		setRotation(RightSeatBack2, 0, 0, -0.0872665F);
		setRotation(RightSeatBack3, 0, 0, -0.0872665F);
		setRotation(RightSeatBack4, 0, 0, -0.0872665F);
		setRotation(RightSeatBack5, 0, 0, -0.0872665F);
		setRotation(RightSeatBack6, 0, 0, -0.0872665F);
		setRotation(RightSeatSmileyBack6, 0, 0, -0.0872665F);
		setRotation(Pole1b, 0, 0, 0.7853982F);
		setRotation(Pole1c, 0, 0, -0.7853982F);
		setRotation(Pole3b, 0, 0, 0.7853982F);
		setRotation(Pole3c, 0, 0, -0.7853982F);
		setRotation(Pole5b, 0, 0, 0.7853982F);
		setRotation(Pole5c, 0, 0, -0.7853982F);
		setRotation(RoofLeft, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofRight, 0, 0, 0.1106539F);
		setRotation(RoofLeftFC, 0, 0, -0.1106539F);
		setRotation(RoofRightFC, 0, (float) Math.PI, 0.1106539F);
		setRotation(RoofInnerLeft, 0, 0, -0.7853982F);
		setRotation(RoofInnerRight, 0, 0, 0.7853982F);
		setRotation(RoofInnerLeft2, 0, (float) Math.PI, -2.887176F);
		setRotation(RoofInnerRight2, 0, 0, 2.887176F);
		setRotation(TV1a, 0.1745329F, 0, 0);
		setRotation(TV1b, 0.1745329F, (float) Math.PI, 0);
		setRotation(TV2a, 0.1745329F, 0, 0);
		setRotation(TV2b, 0.1745329F, (float) Math.PI, 0);
		setRotation(TV3a, 0.1745329F, 0, 0);
		setRotation(TV3b, 0.1745329F, (float) Math.PI, 0);
		setRotation(RoofMiddle, 0, 0, -1.570796F);
		setRotation(RoofTopLeft, 0, 0, 0.2985037F);
		setRotation(RoofTopRight, 0, 0, -0.2985037F);
		setRotation(RoofTopLeft1, 0, 0, 0.2985037F);
		setRotation(RoofTopLeft2, 0, 0, 0.2985037F);
		setRotation(RoofTopRight1, 0, 0, -0.2985037F);
		setRotation(RoofTopRight2, 0, 0, -0.2985037F);
		setRotation(Fan1, 0, (float) Math.PI, 0);
		setRotation(Fan1a, 0, (float) Math.PI, -0.4363323F);
		setRotation(Fan1b, 0, (float) Math.PI, 0.4363323F);
		setRotation(Fan2a, 0, 0, 0.4363323F);
		setRotation(Fan2b, 0, 0, -0.4363323F);
		setRotation(UpperLeftDriverDoor, 0, (float) Math.PI, -0.1106539F);
		setRotation(LeftDriverDoor, 0, (float) Math.PI, 0);
		setRotation(UpperRightDriverDoor, 0, 0, 0.1106539F);
		setRotation(Front, -0.3490659F, 0, 0);
		setRotation(FrontTopLeft, -0.0995885F, -1.047198F, 0);
		setRotation(FrontBottomLeft, 0, -1.047198F, 0);
		setRotation(FrontTopRight, -0.0995885F, 1.047198F, 0);
		setRotation(FrontBottomRight, 0, 1.047198F, 0);
		setRotation(UpperRightWall1End, 0, 0, 0.1106539F);
		setRotation(UpperLeftWall1End, 0, (float) Math.PI, -0.1106539F);
		setRotation(LeftWall2FC, 0, (float) Math.PI, 0);
		setRotation(LeftWall4FC, 0, (float) Math.PI, 0);
		setRotation(LeftWall5FC, 0, (float) Math.PI, 0);
		setRotation(UpperLeftWall2FC, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall4FC, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftWall5FC, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperRightWall2FC, 0, 0, 0.1106539F);
		setRotation(UpperRightWall4FC, 0, 0, 0.1106539F);
		setRotation(UpperRightWall5FC, 0, 0, 0.1106539F);

		setRotation(UpperLeftDoor1L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor2L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor3L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor4L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor5L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor6L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor7L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor8L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor9L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperLeftDoor10L, 0, (float) Math.PI, -0.1106539F);
		setRotation(UpperRightDoor1L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor2L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor3L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor4L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor5L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor6L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor7L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor8L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor9L, 0, 0, 0.1106539F);
		setRotation(UpperRightDoor10L, 0, 0, 0.1106539F);

		setRotation(RoofLeft1L, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofLeft2L, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofLeft3L, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofLeft4L, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofLeft5L, 0, (float) Math.PI, -0.1106539F);
		setRotation(RoofRight1L, 0, 0, 0.1106539F);
		setRotation(RoofRight2L, 0, 0, 0.1106539F);
		setRotation(RoofRight3L, 0, 0, 0.1106539F);
		setRotation(RoofRight4L, 0, 0, 0.1106539F);
		setRotation(RoofRight5L, 0, 0, 0.1106539F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

	public void renderMain(float f5) {
		Floor.render(f5);
		LeftWall1.render(f5);
		LeftWall2.render(f5);
		LeftWall3.render(f5);
		LeftWall4.render(f5);
		LeftWall5.render(f5);
		LeftWall6.render(f5);
		RightWall1.render(f5);
		RightWall2.render(f5);
		RightWall3.render(f5);
		RightWall4.render(f5);
		RightWall5.render(f5);
		RightWall6.render(f5);
		UpperLeftWall2.render(f5);
		UpperLeftWall3.render(f5);
		UpperLeftWall4.render(f5);
		UpperLeftWall5.render(f5);
		UpperLeftWall6.render(f5);
		UpperRightWall2.render(f5);
		UpperRightWall3.render(f5);
		UpperRightWall4.render(f5);
		UpperRightWall5.render(f5);
		UpperRightWall6.render(f5);
		UpperRightWallSmiley6.render(f5);
		LeftPillar1.render(f5);
		LeftPillar2.render(f5);
		RightPillar1.render(f5);
		RightPillar2.render(f5);
		LeftSeat1.render(f5);
		LeftSeat2.render(f5);
		LeftSeat3.render(f5);
		LeftSeat4.render(f5);
		LeftSeat5.render(f5);
		LeftSeat6.render(f5);
		LeftSeatBack1.render(f5);
		LeftSeatBack2.render(f5);
		LeftSeatBack3.render(f5);
		LeftSeatBack4.render(f5);
		LeftSeatBack5.render(f5);
		LeftSeatBack6.render(f5);
		RightSeat1.render(f5);
		RightSeat2.render(f5);
		RightSeat3.render(f5);
		RightSeat4.render(f5);
		RightSeat5.render(f5);
		RightSeat6.render(f5);
		RightSeatBack1.render(f5);
		RightSeatBack2.render(f5);
		RightSeatBack3.render(f5);
		RightSeatBack4.render(f5);
		RightSeatBack5.render(f5);
		RightSeatBack6.render(f5);
		RightSeatSmileyBack6.render(f5);
		Pole1.render(f5);
		Pole1a.render(f5);
		Pole1b.render(f5);
		Pole1c.render(f5);
		Pole2.render(f5);
		Pole3.render(f5);
		Pole3a.render(f5);
		Pole3b.render(f5);
		Pole3c.render(f5);
		Pole4.render(f5);
		Pole5.render(f5);
		Pole5a.render(f5);
		Pole5b.render(f5);
		Pole5c.render(f5);
		Panel1.render(f5);
		Panel2.render(f5);
		Panel3.render(f5);
		Panel4.render(f5);
		Panel5.render(f5);
		Panel6.render(f5);
		Panel7.render(f5);
		Panel8.render(f5);
		Panel9.render(f5);
		Panel10.render(f5);
		RoofLeft.render(f5);
		RoofRight.render(f5);
		RoofLow.render(f5);
		RoofInnerLeft.render(f5);
		RoofInnerRight.render(f5);
		FrontBox.render(f5);
		BackBox.render(f5);
		TV1a.render(f5);
		TV1.render(f5);
		TV1b.render(f5);
		TV2.render(f5);
		TV2a.render(f5);
		TV2b.render(f5);
		TV3.render(f5);
		TV3a.render(f5);
		TV3b.render(f5);
		RoofMiddle.render(f5);
		RoofTop.render(f5);
		RoofTopLeft.render(f5);
		RoofTopRight.render(f5);
		RoofTopLeft1.render(f5);
		RoofTopLeft2.render(f5);
		RoofTopRight1.render(f5);
		RoofTopRight2.render(f5);
		Fan1.render(f5);
		Fan1a.render(f5);
		Fan1b.render(f5);
		Fan2.render(f5);
		Fan2a.render(f5);
		Fan2b.render(f5);
	}

	public void renderDoors(float f5, float leftDoor, float rightDoor) {
		LeftDoor1.offsetZ = -0.8125F * leftDoor;
		LeftDoor2.offsetZ = 0.8125F * leftDoor;
		LeftDoor3.offsetZ = -0.8125F * leftDoor;
		LeftDoor4.offsetZ = 0.8125F * leftDoor;
		LeftDoor5.offsetZ = -0.8125F * leftDoor;
		LeftDoor6.offsetZ = 0.8125F * leftDoor;
		LeftDoor7.offsetZ = -0.8125F * leftDoor;
		LeftDoor8.offsetZ = 0.8125F * leftDoor;
		LeftDoor9.offsetZ = -0.8125F * leftDoor;
		LeftDoor10.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor1.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor2.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor3.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor4.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor5.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor6.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor7.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor8.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor9.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor10.offsetZ = 0.8125F * leftDoor;

		RightDoor1.offsetZ = -0.8125F * rightDoor;
		RightDoor2.offsetZ = 0.8125F * rightDoor;
		RightDoor3.offsetZ = -0.8125F * rightDoor;
		RightDoor4.offsetZ = 0.8125F * rightDoor;
		RightDoor5.offsetZ = -0.8125F * rightDoor;
		RightDoor6.offsetZ = 0.8125F * rightDoor;
		RightDoor7.offsetZ = -0.8125F * rightDoor;
		RightDoor8.offsetZ = 0.8125F * rightDoor;
		RightDoor9.offsetZ = -0.8125F * rightDoor;
		RightDoor10.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor1.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor2.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor3.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor4.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor5.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor6.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor7.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor8.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor9.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor10.offsetZ = 0.8125F * rightDoor;

		LeftDoor1.render(f5);
		LeftDoor2.render(f5);
		LeftDoor3.render(f5);
		LeftDoor4.render(f5);
		LeftDoor5.render(f5);
		LeftDoor6.render(f5);
		LeftDoor7.render(f5);
		LeftDoor8.render(f5);
		LeftDoor9.render(f5);
		LeftDoor10.render(f5);
		RightDoor1.render(f5);
		RightDoor2.render(f5);
		RightDoor3.render(f5);
		RightDoor4.render(f5);
		RightDoor5.render(f5);
		RightDoor6.render(f5);
		RightDoor7.render(f5);
		RightDoor8.render(f5);
		RightDoor9.render(f5);
		RightDoor10.render(f5);
		UpperLeftDoor1.render(f5);
		UpperLeftDoor2.render(f5);
		UpperLeftDoor3.render(f5);
		UpperLeftDoor4.render(f5);
		UpperLeftDoor5.render(f5);
		UpperLeftDoor6.render(f5);
		UpperLeftDoor7.render(f5);
		UpperLeftDoor8.render(f5);
		UpperLeftDoor9.render(f5);
		UpperLeftDoor10.render(f5);
		UpperRightDoor1.render(f5);
		UpperRightDoor2.render(f5);
		UpperRightDoor3.render(f5);
		UpperRightDoor4.render(f5);
		UpperRightDoor5.render(f5);
		UpperRightDoor6.render(f5);
		UpperRightDoor7.render(f5);
		UpperRightDoor8.render(f5);
		UpperRightDoor9.render(f5);
		UpperRightDoor10.render(f5);

		if (leftDoor > 0 || rightDoor > 0) {
			LeftLight.offsetX = -0.0625F;
			LeftLightOn.offsetX = 0;
			RightLight.offsetX = 0.0625F;
			RightLightOn.offsetX = 0;
		} else {
			LeftLight.offsetX = 0;
			LeftLightOn.offsetX = -0.0625F;
			RightLight.offsetX = 0;
			RightLightOn.offsetX = 0.0625F;
		}

		LeftLight.render(f5);
		RightLight.render(f5);
		LeftLightOn.render(f5);
		RightLightOn.render(f5);
	}

	public void renderDoorLabels(float f5, float leftDoor, float rightDoor, boolean firstClass) {
		UpperLeftDoor5L.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor6L.offsetZ = 0.8125F * leftDoor;
		UpperRightDoor5L.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor6L.offsetZ = 0.8125F * rightDoor;
		UpperLeftDoor5L.render(f5);
		UpperLeftDoor6L.render(f5);
		UpperRightDoor5L.render(f5);
		UpperRightDoor6L.render(f5);
		RoofLeft3L.render(f5);
		RoofRight3L.render(f5);

		if (!firstClass) {
			UpperLeftDoor1L.offsetZ = -0.8125F * leftDoor;
			UpperLeftDoor2L.offsetZ = 0.8125F * leftDoor;
			UpperLeftDoor3L.offsetZ = -0.8125F * leftDoor;
			UpperLeftDoor4L.offsetZ = 0.8125F * leftDoor;
			UpperLeftDoor7L.offsetZ = -0.8125F * leftDoor;
			UpperLeftDoor8L.offsetZ = 0.8125F * leftDoor;
			UpperLeftDoor9L.offsetZ = -0.8125F * leftDoor;
			UpperLeftDoor10L.offsetZ = 0.8125F * leftDoor;

			UpperRightDoor1L.offsetZ = -0.8125F * rightDoor;
			UpperRightDoor2L.offsetZ = 0.8125F * rightDoor;
			UpperRightDoor3L.offsetZ = -0.8125F * rightDoor;
			UpperRightDoor4L.offsetZ = 0.8125F * rightDoor;
			UpperRightDoor7L.offsetZ = -0.8125F * rightDoor;
			UpperRightDoor8L.offsetZ = 0.8125F * rightDoor;
			UpperRightDoor9L.offsetZ = -0.8125F * rightDoor;
			UpperRightDoor10L.offsetZ = 0.8125F * rightDoor;

			UpperLeftDoor1L.render(f5);
			UpperLeftDoor2L.render(f5);
			UpperLeftDoor3L.render(f5);
			UpperLeftDoor4L.render(f5);
			UpperLeftDoor7L.render(f5);
			UpperLeftDoor8L.render(f5);
			UpperLeftDoor9L.render(f5);
			UpperLeftDoor10L.render(f5);
			UpperRightDoor1L.render(f5);
			UpperRightDoor2L.render(f5);
			UpperRightDoor3L.render(f5);
			UpperRightDoor4L.render(f5);
			UpperRightDoor7L.render(f5);
			UpperRightDoor8L.render(f5);
			UpperRightDoor9L.render(f5);
			UpperRightDoor10L.render(f5);

			RoofLeft1L.render(f5);
			RoofLeft2L.render(f5);
			RoofLeft4L.render(f5);
			RoofLeft5L.render(f5);
			RoofRight1L.render(f5);
			RoofRight2L.render(f5);
			RoofRight4L.render(f5);
			RoofRight5L.render(f5);
		}
	}

	public void renderLights(float f5) {
		RoofInnerLeft2.render(f5);
		RoofInnerRight2.render(f5);
	}

	public void renderNonEnd(float f5) {
		UpperLeftWall1.render(f5);
		UpperRightWall1.render(f5);
	}

	public void renderEnd(float f5) {
		UpperLeftDriverDoor.render(f5);
		LeftDriverDoor.render(f5);
		UpperRightDriverDoor.render(f5);
		RightDriverDoor.render(f5);
		BackWall.render(f5);
		Front.render(f5);
		FrontTopLeft.render(f5);
		FrontBottomLeft.render(f5);
		FrontTopRight.render(f5);
		FrontBottomRight.render(f5);
		FrontFloor.render(f5);
		UpperRightWall1End.render(f5);
		UpperLeftWall1End.render(f5);
	}

	public void renderFirstClass(float f5, float leftDoor, float rightDoor) {
		LeftDoor1.offsetZ = 0;
		LeftDoor2.offsetZ = 0;
		UpperLeftDoor1.offsetZ = 0;
		UpperLeftDoor2.offsetZ = 0;
		RightDoor1.offsetZ = 0;
		RightDoor2.offsetZ = 0;
		UpperRightDoor1.offsetZ = 0;
		UpperRightDoor2.offsetZ = 0;
		LeftDoor5.offsetZ = -0.8125F * leftDoor;
		LeftDoor6.offsetZ = 0.8125F * leftDoor;
		UpperLeftDoor5.offsetZ = -0.8125F * leftDoor;
		UpperLeftDoor6.offsetZ = 0.8125F * leftDoor;
		RightDoor5.offsetZ = -0.8125F * rightDoor;
		RightDoor6.offsetZ = 0.8125F * rightDoor;
		UpperRightDoor5.offsetZ = -0.8125F * rightDoor;
		UpperRightDoor6.offsetZ = 0.8125F * rightDoor;

		if (leftDoor > 0 || rightDoor > 0) {
			LeftLight.offsetX = -0.0625F;
			LeftLightOn.offsetX = 0;
			RightLight.offsetX = 0.0625F;
			RightLightOn.offsetX = 0;
		} else {
			LeftLight.offsetX = 0;
			LeftLightOn.offsetX = -0.0625F;
			RightLight.offsetX = 0;
			RightLightOn.offsetX = 0.0625F;
		}

		Floor.render(f5);
		FloorSide1FC.render(f5);
		FloorSide2FC.render(f5);
		LeftWall1.render(f5);
		LeftWall2.render(f5);
		LeftWall3.render(f5);
		LeftWall4.render(f5);
		LeftWall5.render(f5);
		LeftWall6.render(f5);
		RightWall1.render(f5);
		RightWall2.render(f5);
		RightWall3.render(f5);
		RightWall4.render(f5);
		RightWall5.render(f5);
		RightWall6.render(f5);
		LeftDoor1.render(f5);
		LeftDoor2.render(f5);
		LeftDoor5.render(f5);
		LeftDoor6.render(f5);
		RightDoor1.render(f5);
		RightDoor2.render(f5);
		RightDoor5.render(f5);
		RightDoor6.render(f5);
		UpperLeftWall1.render(f5);
		UpperLeftWall2.render(f5);
		UpperLeftWall3.render(f5);
		UpperLeftWall4.render(f5);
		UpperLeftWall5.render(f5);
		UpperLeftWall6.render(f5);
		UpperRightWall1.render(f5);
		UpperRightWall2.render(f5);
		UpperRightWall3.render(f5);
		UpperRightWall4.render(f5);
		UpperRightWall5.render(f5);
		UpperRightWall6.render(f5);
		UpperLeftDoor1.render(f5);
		UpperLeftDoor2.render(f5);
		UpperLeftDoor5.render(f5);
		UpperLeftDoor6.render(f5);
		UpperRightDoor1.render(f5);
		UpperRightDoor2.render(f5);
		UpperRightDoor5.render(f5);
		UpperRightDoor6.render(f5);
		LeftPillar1.render(f5);
		LeftPillar2.render(f5);
		RightPillar1.render(f5);
		RightPillar2.render(f5);
		Pole1.render(f5);
		Pole3.render(f5);
		Pole3a.render(f5);
		Pole3b.render(f5);
		Pole3c.render(f5);
		Panel1.render(f5);
		Panel2.render(f5);
		Panel5.render(f5);
		Panel6.render(f5);
		RoofLeftFC.render(f5);
		RoofRightFC.render(f5);
		RoofLow.render(f5);
		RoofInnerLeft.render(f5);
		RoofInnerRight.render(f5);
		FrontBox.render(f5);
		BackBox.render(f5);
		TV2.render(f5);
		TV2a.render(f5);
		TV2b.render(f5);
		RoofMiddle.render(f5);
		RoofTop.render(f5);
		RoofTopLeft.render(f5);
		RoofTopRight.render(f5);
		RoofTopLeft1.render(f5);
		RoofTopLeft2.render(f5);
		RoofTopRight1.render(f5);
		RoofTopRight2.render(f5);
		LeftLight.render(f5);
		RightLight.render(f5);
		LeftLightOn.render(f5);
		RightLightOn.render(f5);
		Fan1.render(f5);
		Fan1a.render(f5);
		Fan1b.render(f5);
		Fan2.render(f5);
		Fan2a.render(f5);
		Fan2b.render(f5);
		LeftWall2FC.render(f5);
		LeftWall4FC.render(f5);
		LeftWall5FC.render(f5);
		RightWall2FC.render(f5);
		RightWall4FC.render(f5);
		RightWall5FC.render(f5);
		UpperLeftWall2FC.render(f5);
		UpperLeftWall4FC.render(f5);
		UpperLeftWall5FC.render(f5);
		UpperRightWall2FC.render(f5);
		UpperRightWall4FC.render(f5);
		UpperRightWall5FC.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
